TODO: Make better TODO list.
Bugs:
/ Username editing bug (not being able to enter text when editing username twice) seems to be flutter problem, hopefully flutter fixes soon. [Fix is done, waiting for it to reach release: https://github.com/flutter/engine/pull/30916]
- Fix delete account bug, requires two clicks of button.
- Test deleting account with email sign in.
- Trim whitespace in email input for magic link.
- Fix image too large on load screen.
- Fix crashing on first open on my phone.

NOTE:
To build dev apk
flutter build apk --flavor dev -t lib/main_development.dart


For 1.0 Release:
Get Ready for GitHub release:
- Think of a name.
    NAME IDEAS:
	LoveDOT
        Something from mythology.
        Rati is hindu god of love. Rati - Rating, play on that somehow.
        Love, Relationship, Couple, Cupid
        Connect, Rating, Valuation, Value, Compass, Tank, Fuel, Needs, Bond, Rate, Relate, Satisfaction, Link, Passion, Care, Check, Happy
        PassionRate
        LoveRati
        Care
	LoveLink
	LoveCompass
	CoupleCompass
	LoveCheck
	LoveLux
	LoveChrome
    LoveHue

- Think of developer name.

- Perform actions needed for release: Specify app ID and add signing config.
- Change project name and domain name:
- https://stackoverflow.com/questions/58679233/how-to-change-company-domain-name-in-flutter

- Write about app dialog info.

- Setup github readme doc.
- Include roadmap/future features.
- Link to api doc in readme.
- Maybe setup project management in github, rather than just this todolist.

- Before Release: https://docs.flutter.dev/deployment/android

- Setup automated pipeline.
    - https://docs.flutter.dev/deployment/cd
    - Have two github repos, one public and one private. Each has a development branch and release branch.
    - Automatically push commits from the private repo to public repo, with any confidential info removed.

- Release on github, setup different branches with release and testing.

- Write tests.

- Have some sort of code evaluation, e.g. test code coverage. Display results on github.


- Have flavours:
 - Prod - link to prod firebase project
    - Setup prod firebase project
 - Dev - link to dev firebase project
 - Emu - link to emulated firebase
    - Setup emulated firebase
 - Demo - link to an emulated firebase with pre populated data? Design for web
    - Setup demo backend. Emulated firebase?

- Put your bar numbers on partners bars screen (next to their numbers somewhere) for easy comparison.
  [NOTE: Possibly not needed anymore now that scroll position persists when switching screens.
   Maybe put previous bar values on bars screen? At least until history is added.]

- Add email sign in button to convert account when anonymously signed in. - Hoping flutterfire ui does this soon. If not will have to implement myself.

- Put message stating that if you sign out with anonymous account you cannot sign back in to that account, account will be deleted.
- Delete account on anonymous sign out.

- Add feedback form to settings page. Have options for bug report, feature request and other.

- Explain what magic link is on sign in screen, and what happens if choose to skip login, e.g. account data may get lost.
- Have cancel/back button on magic link screens.
- Maybe add alert dialog when skip log in. Explain what not logging in will mean, e.g. anonymous and data won't persist on reinstall or across devices.
- Add icon to skip log in.
- Cancel/back buttons on sign in process.

- Improve magic link email

- Fix buttons being hidden by keyboard on sign in screens.

- Add loading overlays for all async actions that require it, e.g. don't want user to click twice when saving bars or signing in.
    [Possibly use listener for this]
- Blur behind loading overlay

- Show part of bottom slider on bar screens to make it clear that you can scroll.
- Improve UI theming/design.
- UI
    \ Less space below Your bars/partner bars titles
    \ Pick better colours for sliders and everything else.
    \ Change dark green colour to something else.
    - Add some animation

- See if can call the bars needs, or something similar.

- Improve error displays, display more errors on screen rather than printing, and log non display errors.
- Show no internet connection message when trying to connect to FireStore and no connection error is given.

- Remove unnecessary font files
- Check performance, see if can reduce storage.
- Speed up performance where can. Reduce jank, use computes https://docs.flutter.dev/cookbook/networking/background-parsing.

- Test on many different devices and screen sizes.

- On settings screen, have delete account button, about this app, and theme switcher (dark/light mode).
- Have welcome screen that showcases app before login.

- Pull down to refresh and refresh button on partners page.

- Optimization, only update widgets that need updating.

- Write database security rules
- Optimise database access
- Maybe use callable cloud functions to edit data in database.
- Check best way to write to database. Is current way secure enough? Is there better option for production?
- Look at what need to do for moving to release.

- Check GDPR and other data privacy rules. Make sure user data is deleted after certain amount of time.

- Write terms and conditions.

- Work out business model:
    - Calculate database costs per user
    - Decide on monetisation: Figure out how to cover database costs with that monetisation method.
- Write that monetisation is to cover database costs and not for profit, maybe accept donations.

- Setup new development database
- Setup release database with analytics

- Update github readme.
- Release on play store

- Have demo version installed on phone, maybe need two versions that are connected to each other to properly showcase it.

- Have nice website, use template, showing about app, link to it from portfolio.
- Set this up on google hosting, with same name as domain name.

- Maybe have web version to demo with emulated database.


- Animated logo. https://icons8.com/icon/SHe9eWc1NTiF/half-heart
Maybe have them split and go either side of the L in love, one in front one behind, and meet up on other side.



Future
- Text input slider number.

- History page. Show yours and partners histories.

- Notifications:
        - reminders to set needs (customisable how frequent)
        - notification when partner updates
        - incoming link request notification
        - partner unlink notification
- Notification settings, set every type of notification.
- Nudge button, tells partner you've updated and want them to update.

- Overall bar that averages rest of bars and when changed, changes the rest proportionally.

- Add/Edit/Remove bars.
- Subcategory bars. Overall category bar can optionally average its subcategory bars.


- Optional decay, bars reduce over time with advanced setting to customise this.

- Simple mode and advanced mode. Have advanced settings to allow people to customise more advanced things like decay amount.
Notification reminders to set needs.

- Different themes: light mode, dark mode etc. Setting to choose or follow device theme.

- Moodlets.
- Wishes.




DONE:
Bugs
- When accepting link request, error: shouldn't see this message appears until leave page.
- When signing out then signing back in, there is a gap between appbar title and subtitle.
- Fix status bar not showing up
- Partner name doesn't update instantly on partner's bars page.


For 1.0 Release
- Display timestamps on yours and partners pages.
- Display bars in order from order field on your and partner screens.
- Accept/Rejection for incoming link requests. Only show requests if not linked to a partner.
- Refresh partner's app when user links to them.
- Test timestamps and display them nicer.
- Make link codes copyable.
- Accept/Rejection for incoming link requests. Only show requests if not linked to a partner.
- Refresh partner's app when user links to them.
- Persist scroll state/position across screens.
- Settings screen:
        - Remove profile picture icon.
        - Implement an unlink partner button.
        - Implement delete account button properly, delete all database data for user.
- Test that bars are displayed in order from order field on your and partner screens.
- Ensure partner's name shows up on partner's page and settings page.
- When changing display name on profile screen, update name in userinfo database.

- Optimise slider colour picking.
- Have slider colours on partners bar page.
- Change profile page name to account. Change icon too.
- Separate Profile page and settings screen. Have settings button in top right instead of sign out.

- When pulling partners bars from online database, check if still linked to partner. If not, delete partner id from local storage.
- Have clearer sign out button.

- Improve code comments/documentation.

- Generate dartdoc and include in github repo.

- Improve code comments/documentation.

- Generate dartdoc and include in github repo.

- Setup best .gitignore
- Hide all confidential info in public repo.
- Put version number in about dialog
