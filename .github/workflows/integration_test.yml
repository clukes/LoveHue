name: Integration Tests
on:
    push:
        branches:
            - main
    pull_request:

jobs:
  # ios:
  #   # Creates a build matrix for your jobs. You can define different variations of an environment to run each job
  #   strategy:
  #     matrix:
  #       device:
  #         # The available simulators are listed by the "xcrun xctrace list devices" command
  #         - "iPhone 11 Simulator (15.2)" # the name of the simulator could be different depending on the macos version you are using
  #     # if one of the jobs in the matrix expansion fails, the rest of the jobs will be cancelled
  #     fail-fast: true
  #   runs-on: macos-11 # or macos-latest if you prefer, but be aware that the available simulators could be different if you run a different version
  #   steps:
  #     - name: "List all simulators"
  #       run: "xcrun xctrace list devices"
  #     - name: "Start Simulator"
  #       # the command "xcrun simctl boot" expects a device identifier
  #       # the assignment of the UDID variable consists of retrieving the ID of the simulator
  #       # by extracting it from the command "xcrun xctrace list devices"
  #       run: |
  #         UDID=$(xcrun xctrace list devices | grep "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
  #         echo $UDID
  #         xcrun simctl boot "${UDID:?No Simulator with this name found}"
  #     - uses: actions/checkout@v3
  #     - name: Setup Flutter SDK
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         # instead of "channel: stable", you could be more precise by specifying the exact version of Flutter you're using:
  #         # flutter-version: '<FLUTTER_VERSION>'
  #     - name: Install Flutter dependencies
  #       run: flutter pub get
  #     - name: Run integration tests
  #       run: flutter test integration_test --verbose

  android:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level:
          - 33
      fail-fast: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Firebase Emulator Suite
        run: npm install -g firebase-tools
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Start firebase emulator
        run: firebase emulators:start &
      - name: Run integration tests
        # more info on https://github.com/ReactiveCircus/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: flutter drive --driver=integration_test/test_driver/test_driver.dart --target integration_test/main.dart
      - name: Upload Screenshoots
        uses: actions/upload-artifact@v3
        with:
          name: Test result screenshots
          path: screenshots/*.png

  web:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Firebase Emulator Suite
        run: npm install -g firebase-tools
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Install chromedriver
        uses: nanasess/setup-chromedriver@v2
      - name: Start firebase emulator
        run: firebase emulators:start &
      - name: Start chromedriver
        run: chromedriver --port=4444 &
      - name: Run integration tests
        run: flutter drive --driver=integration_test/test_driver/test_driver.dart --target integration_test/main.dart
      - name: Upload Screenshoots
        uses: actions/upload-artifact@v3
        with:
          name: Test result screenshots
          path: screenshots/*.png
